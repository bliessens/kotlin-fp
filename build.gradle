plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
    id "org.jetbrains.kotlin.kapt" version "1.3.72"
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'idea'

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    ext {
        ktor_version = '1.4.0'
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

        implementation "io.ktor:ktor-client:$ktor_version"
        implementation "io.ktor:ktor-client-jetty:$ktor_version"
        implementation "io.ktor:ktor-client-json:$ktor_version"
        implementation "io.ktor:ktor-client-jackson:$ktor_version"
        implementation "io.ktor:ktor-client-auth-basic:$ktor_version"
        implementation "io.ktor:ktor-locations:$ktor_version"

        implementation "io.ktor:ktor-server-core:$ktor_version"
        implementation "io.ktor:ktor-server-netty:$ktor_version"
        runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

        testImplementation "org.jetbrains.kotlin:kotlin-reflect"
        testImplementation "org.jetbrains.kotlin:kotlin-test"
//    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
        testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
        testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")
        implementation "net.sf.jt400:jt400-jdk8:10.4"
        implementation "com.mchange:c3p0:0.9.5.5"

    }

    test {
        useJUnitPlatform()
        testLogging {
            events(/*"passed", "skipped",*/ "failed")
        }
    }

    idea {
        module {
            outputDir = file("$rootDir/out/production/$name")
            testOutputDir = file("$rootDir/out/test/$name")

            excludeDirs += [file('.gradle'), file('.idea'), file('build'), file('gradle')]

            downloadSources = true
            downloadJavadoc = true
        }
    }
}